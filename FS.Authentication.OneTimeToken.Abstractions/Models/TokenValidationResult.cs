using System;
using System.Linq;

namespace FS.Authentication.OneTimeToken.Abstractions.Models
{
    /// <summary>
    /// An one time access token validation result.
    /// </summary>
    /// <autogeneratedoc />
    public class TokenValidationResult
    {
        /// <summary>
        /// <c>true</c>, if the token is valid; otherwise <c>false</c>.
        /// </summary>
        public bool IsValid { get; private set; }

        /// <summary>
        /// The roles the token belongs to.
        /// </summary>
        public string[] Roles { get; private set; }

        /// <summary>
        /// Indicates an authorized access.
        /// </summary>
        public static TokenValidationResult Success(string[] roles)
            => new TokenValidationResult()
            {
                IsValid = true,
                Roles = roles?
                    .Where(role => !string.IsNullOrEmpty(role)).ToArray()
                    ?? Array.Empty<string>()
            };

        /// <summary>
        /// Indicates an unauthorized access.
        /// </summary>
        public static TokenValidationResult Failed()
            => new TokenValidationResult() { IsValid = false };
    }
}